// Code generated by GENERATOR. DO NOT EDIT.
import * as jspb from "google-protobuf"

import * as github_com_onosproject_ran$simulator_api_types_types_pb from '../../../../../github.com/onosproject/ran-simulator/api/types/types_pb';

export class MapLayoutRequest extends jspb.Message {
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): MapLayoutRequest.AsObject;
  static toObject(includeInstance: boolean, msg: MapLayoutRequest): MapLayoutRequest.AsObject;
  static serializeBinaryToWriter(message: MapLayoutRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): MapLayoutRequest;
  static deserializeBinaryFromReader(message: MapLayoutRequest, reader: jspb.BinaryReader): MapLayoutRequest;
}

export namespace MapLayoutRequest {
  export type AsObject = {
  }
}

export class ListCellsRequest extends jspb.Message {
  getSubscribe(): boolean;
  setSubscribe(value: boolean): void;

  getWithoutreplay(): boolean;
  setWithoutreplay(value: boolean): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ListCellsRequest.AsObject;
  static toObject(includeInstance: boolean, msg: ListCellsRequest): ListCellsRequest.AsObject;
  static serializeBinaryToWriter(message: ListCellsRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ListCellsRequest;
  static deserializeBinaryFromReader(message: ListCellsRequest, reader: jspb.BinaryReader): ListCellsRequest;
}

export namespace ListCellsRequest {
  export type AsObject = {
    subscribe: boolean,
    withoutreplay: boolean,
  }
}

export class ListCellsResponse extends jspb.Message {
  getCell(): github_com_onosproject_ran$simulator_api_types_types_pb.Cell | undefined;
  setCell(value?: github_com_onosproject_ran$simulator_api_types_types_pb.Cell): void;
  hasCell(): boolean;
  clearCell(): void;

  getType(): Type;
  setType(value: Type): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ListCellsResponse.AsObject;
  static toObject(includeInstance: boolean, msg: ListCellsResponse): ListCellsResponse.AsObject;
  static serializeBinaryToWriter(message: ListCellsResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ListCellsResponse;
  static deserializeBinaryFromReader(message: ListCellsResponse, reader: jspb.BinaryReader): ListCellsResponse;
}

export namespace ListCellsResponse {
  export type AsObject = {
    cell?: github_com_onosproject_ran$simulator_api_types_types_pb.Cell.AsObject,
    type: Type,
  }
}

export class ListRoutesRequest extends jspb.Message {
  getSubscribe(): boolean;
  setSubscribe(value: boolean): void;

  getWithoutreplay(): boolean;
  setWithoutreplay(value: boolean): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ListRoutesRequest.AsObject;
  static toObject(includeInstance: boolean, msg: ListRoutesRequest): ListRoutesRequest.AsObject;
  static serializeBinaryToWriter(message: ListRoutesRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ListRoutesRequest;
  static deserializeBinaryFromReader(message: ListRoutesRequest, reader: jspb.BinaryReader): ListRoutesRequest;
}

export namespace ListRoutesRequest {
  export type AsObject = {
    subscribe: boolean,
    withoutreplay: boolean,
  }
}

export class ListRoutesResponse extends jspb.Message {
  getRoute(): github_com_onosproject_ran$simulator_api_types_types_pb.Route | undefined;
  setRoute(value?: github_com_onosproject_ran$simulator_api_types_types_pb.Route): void;
  hasRoute(): boolean;
  clearRoute(): void;

  getType(): Type;
  setType(value: Type): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ListRoutesResponse.AsObject;
  static toObject(includeInstance: boolean, msg: ListRoutesResponse): ListRoutesResponse.AsObject;
  static serializeBinaryToWriter(message: ListRoutesResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ListRoutesResponse;
  static deserializeBinaryFromReader(message: ListRoutesResponse, reader: jspb.BinaryReader): ListRoutesResponse;
}

export namespace ListRoutesResponse {
  export type AsObject = {
    route?: github_com_onosproject_ran$simulator_api_types_types_pb.Route.AsObject,
    type: Type,
  }
}

export class ListUesRequest extends jspb.Message {
  getSubscribe(): boolean;
  setSubscribe(value: boolean): void;

  getWithoutreplay(): boolean;
  setWithoutreplay(value: boolean): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ListUesRequest.AsObject;
  static toObject(includeInstance: boolean, msg: ListUesRequest): ListUesRequest.AsObject;
  static serializeBinaryToWriter(message: ListUesRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ListUesRequest;
  static deserializeBinaryFromReader(message: ListUesRequest, reader: jspb.BinaryReader): ListUesRequest;
}

export namespace ListUesRequest {
  export type AsObject = {
    subscribe: boolean,
    withoutreplay: boolean,
  }
}

export class ListUesResponse extends jspb.Message {
  getUe(): github_com_onosproject_ran$simulator_api_types_types_pb.Ue | undefined;
  setUe(value?: github_com_onosproject_ran$simulator_api_types_types_pb.Ue): void;
  hasUe(): boolean;
  clearUe(): void;

  getType(): Type;
  setType(value: Type): void;

  getUpdateType(): UpdateType;
  setUpdateType(value: UpdateType): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ListUesResponse.AsObject;
  static toObject(includeInstance: boolean, msg: ListUesResponse): ListUesResponse.AsObject;
  static serializeBinaryToWriter(message: ListUesResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ListUesResponse;
  static deserializeBinaryFromReader(message: ListUesResponse, reader: jspb.BinaryReader): ListUesResponse;
}

export namespace ListUesResponse {
  export type AsObject = {
    ue?: github_com_onosproject_ran$simulator_api_types_types_pb.Ue.AsObject,
    type: Type,
    updateType: UpdateType,
  }
}

export class SetNumberUEsRequest extends jspb.Message {
  getNumber(): number;
  setNumber(value: number): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): SetNumberUEsRequest.AsObject;
  static toObject(includeInstance: boolean, msg: SetNumberUEsRequest): SetNumberUEsRequest.AsObject;
  static serializeBinaryToWriter(message: SetNumberUEsRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): SetNumberUEsRequest;
  static deserializeBinaryFromReader(message: SetNumberUEsRequest, reader: jspb.BinaryReader): SetNumberUEsRequest;
}

export namespace SetNumberUEsRequest {
  export type AsObject = {
    number: number,
  }
}

export class SetNumberUEsResponse extends jspb.Message {
  getNumber(): number;
  setNumber(value: number): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): SetNumberUEsResponse.AsObject;
  static toObject(includeInstance: boolean, msg: SetNumberUEsResponse): SetNumberUEsResponse.AsObject;
  static serializeBinaryToWriter(message: SetNumberUEsResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): SetNumberUEsResponse;
  static deserializeBinaryFromReader(message: SetNumberUEsResponse, reader: jspb.BinaryReader): SetNumberUEsResponse;
}

export namespace SetNumberUEsResponse {
  export type AsObject = {
    number: number,
  }
}

export class ResetMetricsMsg extends jspb.Message {
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ResetMetricsMsg.AsObject;
  static toObject(includeInstance: boolean, msg: ResetMetricsMsg): ResetMetricsMsg.AsObject;
  static serializeBinaryToWriter(message: ResetMetricsMsg, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ResetMetricsMsg;
  static deserializeBinaryFromReader(message: ResetMetricsMsg, reader: jspb.BinaryReader): ResetMetricsMsg;
}

export namespace ResetMetricsMsg {
  export type AsObject = {
  }
}

export enum Type { 
  NONE = 0,
  ADDED = 1,
  UPDATED = 2,
  REMOVED = 3,
}
export enum UpdateType { 
  NOUPDATETYPE = 0,
  POSITION = 1,
  TOWER = 2,
  HANDOVER = 3,
}
