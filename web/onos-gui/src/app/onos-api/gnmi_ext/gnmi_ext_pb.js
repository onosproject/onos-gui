// source: gnmi_ext/gnmi_ext.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.gnmi_ext.Extension', null, global);
goog.exportSymbol('proto.gnmi_ext.Extension.ExtCase', null, global);
goog.exportSymbol('proto.gnmi_ext.ExtensionID', null, global);
goog.exportSymbol('proto.gnmi_ext.MasterArbitration', null, global);
goog.exportSymbol('proto.gnmi_ext.RegisteredExtension', null, global);
goog.exportSymbol('proto.gnmi_ext.Role', null, global);
goog.exportSymbol('proto.gnmi_ext.Uint128', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gnmi_ext.Extension = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.gnmi_ext.Extension.oneofGroups_);
};
goog.inherits(proto.gnmi_ext.Extension, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gnmi_ext.Extension.displayName = 'proto.gnmi_ext.Extension';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gnmi_ext.RegisteredExtension = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gnmi_ext.RegisteredExtension, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gnmi_ext.RegisteredExtension.displayName = 'proto.gnmi_ext.RegisteredExtension';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gnmi_ext.MasterArbitration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gnmi_ext.MasterArbitration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gnmi_ext.MasterArbitration.displayName = 'proto.gnmi_ext.MasterArbitration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gnmi_ext.Uint128 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gnmi_ext.Uint128, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gnmi_ext.Uint128.displayName = 'proto.gnmi_ext.Uint128';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gnmi_ext.Role = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gnmi_ext.Role, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gnmi_ext.Role.displayName = 'proto.gnmi_ext.Role';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.gnmi_ext.Extension.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.gnmi_ext.Extension.ExtCase = {
  EXT_NOT_SET: 0,
  REGISTERED_EXT: 1,
  MASTER_ARBITRATION: 2
};

/**
 * @return {proto.gnmi_ext.Extension.ExtCase}
 */
proto.gnmi_ext.Extension.prototype.getExtCase = function() {
  return /** @type {proto.gnmi_ext.Extension.ExtCase} */(jspb.Message.computeOneofCase(this, proto.gnmi_ext.Extension.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gnmi_ext.Extension.prototype.toObject = function(opt_includeInstance) {
  return proto.gnmi_ext.Extension.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gnmi_ext.Extension} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gnmi_ext.Extension.toObject = function(includeInstance, msg) {
  var f, obj = {
    registeredExt: (f = msg.getRegisteredExt()) && proto.gnmi_ext.RegisteredExtension.toObject(includeInstance, f),
    masterArbitration: (f = msg.getMasterArbitration()) && proto.gnmi_ext.MasterArbitration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gnmi_ext.Extension}
 */
proto.gnmi_ext.Extension.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gnmi_ext.Extension;
  return proto.gnmi_ext.Extension.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gnmi_ext.Extension} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gnmi_ext.Extension}
 */
proto.gnmi_ext.Extension.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gnmi_ext.RegisteredExtension;
      reader.readMessage(value,proto.gnmi_ext.RegisteredExtension.deserializeBinaryFromReader);
      msg.setRegisteredExt(value);
      break;
    case 2:
      var value = new proto.gnmi_ext.MasterArbitration;
      reader.readMessage(value,proto.gnmi_ext.MasterArbitration.deserializeBinaryFromReader);
      msg.setMasterArbitration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gnmi_ext.Extension.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gnmi_ext.Extension.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gnmi_ext.Extension} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gnmi_ext.Extension.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRegisteredExt();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gnmi_ext.RegisteredExtension.serializeBinaryToWriter
    );
  }
  f = message.getMasterArbitration();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gnmi_ext.MasterArbitration.serializeBinaryToWriter
    );
  }
};


/**
 * optional RegisteredExtension registered_ext = 1;
 * @return {?proto.gnmi_ext.RegisteredExtension}
 */
proto.gnmi_ext.Extension.prototype.getRegisteredExt = function() {
  return /** @type{?proto.gnmi_ext.RegisteredExtension} */ (
    jspb.Message.getWrapperField(this, proto.gnmi_ext.RegisteredExtension, 1));
};


/**
 * @param {?proto.gnmi_ext.RegisteredExtension|undefined} value
 * @return {!proto.gnmi_ext.Extension} returns this
*/
proto.gnmi_ext.Extension.prototype.setRegisteredExt = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.gnmi_ext.Extension.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gnmi_ext.Extension} returns this
 */
proto.gnmi_ext.Extension.prototype.clearRegisteredExt = function() {
  return this.setRegisteredExt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gnmi_ext.Extension.prototype.hasRegisteredExt = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional MasterArbitration master_arbitration = 2;
 * @return {?proto.gnmi_ext.MasterArbitration}
 */
proto.gnmi_ext.Extension.prototype.getMasterArbitration = function() {
  return /** @type{?proto.gnmi_ext.MasterArbitration} */ (
    jspb.Message.getWrapperField(this, proto.gnmi_ext.MasterArbitration, 2));
};


/**
 * @param {?proto.gnmi_ext.MasterArbitration|undefined} value
 * @return {!proto.gnmi_ext.Extension} returns this
*/
proto.gnmi_ext.Extension.prototype.setMasterArbitration = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.gnmi_ext.Extension.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gnmi_ext.Extension} returns this
 */
proto.gnmi_ext.Extension.prototype.clearMasterArbitration = function() {
  return this.setMasterArbitration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gnmi_ext.Extension.prototype.hasMasterArbitration = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gnmi_ext.RegisteredExtension.prototype.toObject = function(opt_includeInstance) {
  return proto.gnmi_ext.RegisteredExtension.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gnmi_ext.RegisteredExtension} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gnmi_ext.RegisteredExtension.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    msg: msg.getMsg_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gnmi_ext.RegisteredExtension}
 */
proto.gnmi_ext.RegisteredExtension.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gnmi_ext.RegisteredExtension;
  return proto.gnmi_ext.RegisteredExtension.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gnmi_ext.RegisteredExtension} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gnmi_ext.RegisteredExtension}
 */
proto.gnmi_ext.RegisteredExtension.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.gnmi_ext.ExtensionID} */ (reader.readEnum());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMsg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gnmi_ext.RegisteredExtension.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gnmi_ext.RegisteredExtension.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gnmi_ext.RegisteredExtension} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gnmi_ext.RegisteredExtension.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMsg_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional ExtensionID id = 1;
 * @return {!proto.gnmi_ext.ExtensionID}
 */
proto.gnmi_ext.RegisteredExtension.prototype.getId = function() {
  return /** @type {!proto.gnmi_ext.ExtensionID} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.gnmi_ext.ExtensionID} value
 * @return {!proto.gnmi_ext.RegisteredExtension} returns this
 */
proto.gnmi_ext.RegisteredExtension.prototype.setId = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional bytes msg = 2;
 * @return {string}
 */
proto.gnmi_ext.RegisteredExtension.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes msg = 2;
 * This is a type-conversion wrapper around `getMsg()`
 * @return {string}
 */
proto.gnmi_ext.RegisteredExtension.prototype.getMsg_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMsg()));
};


/**
 * optional bytes msg = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMsg()`
 * @return {!Uint8Array}
 */
proto.gnmi_ext.RegisteredExtension.prototype.getMsg_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMsg()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.gnmi_ext.RegisteredExtension} returns this
 */
proto.gnmi_ext.RegisteredExtension.prototype.setMsg = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gnmi_ext.MasterArbitration.prototype.toObject = function(opt_includeInstance) {
  return proto.gnmi_ext.MasterArbitration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gnmi_ext.MasterArbitration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gnmi_ext.MasterArbitration.toObject = function(includeInstance, msg) {
  var f, obj = {
    role: (f = msg.getRole()) && proto.gnmi_ext.Role.toObject(includeInstance, f),
    electionId: (f = msg.getElectionId()) && proto.gnmi_ext.Uint128.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gnmi_ext.MasterArbitration}
 */
proto.gnmi_ext.MasterArbitration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gnmi_ext.MasterArbitration;
  return proto.gnmi_ext.MasterArbitration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gnmi_ext.MasterArbitration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gnmi_ext.MasterArbitration}
 */
proto.gnmi_ext.MasterArbitration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gnmi_ext.Role;
      reader.readMessage(value,proto.gnmi_ext.Role.deserializeBinaryFromReader);
      msg.setRole(value);
      break;
    case 2:
      var value = new proto.gnmi_ext.Uint128;
      reader.readMessage(value,proto.gnmi_ext.Uint128.deserializeBinaryFromReader);
      msg.setElectionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gnmi_ext.MasterArbitration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gnmi_ext.MasterArbitration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gnmi_ext.MasterArbitration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gnmi_ext.MasterArbitration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRole();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gnmi_ext.Role.serializeBinaryToWriter
    );
  }
  f = message.getElectionId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gnmi_ext.Uint128.serializeBinaryToWriter
    );
  }
};


/**
 * optional Role role = 1;
 * @return {?proto.gnmi_ext.Role}
 */
proto.gnmi_ext.MasterArbitration.prototype.getRole = function() {
  return /** @type{?proto.gnmi_ext.Role} */ (
    jspb.Message.getWrapperField(this, proto.gnmi_ext.Role, 1));
};


/**
 * @param {?proto.gnmi_ext.Role|undefined} value
 * @return {!proto.gnmi_ext.MasterArbitration} returns this
*/
proto.gnmi_ext.MasterArbitration.prototype.setRole = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gnmi_ext.MasterArbitration} returns this
 */
proto.gnmi_ext.MasterArbitration.prototype.clearRole = function() {
  return this.setRole(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gnmi_ext.MasterArbitration.prototype.hasRole = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Uint128 election_id = 2;
 * @return {?proto.gnmi_ext.Uint128}
 */
proto.gnmi_ext.MasterArbitration.prototype.getElectionId = function() {
  return /** @type{?proto.gnmi_ext.Uint128} */ (
    jspb.Message.getWrapperField(this, proto.gnmi_ext.Uint128, 2));
};


/**
 * @param {?proto.gnmi_ext.Uint128|undefined} value
 * @return {!proto.gnmi_ext.MasterArbitration} returns this
*/
proto.gnmi_ext.MasterArbitration.prototype.setElectionId = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gnmi_ext.MasterArbitration} returns this
 */
proto.gnmi_ext.MasterArbitration.prototype.clearElectionId = function() {
  return this.setElectionId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gnmi_ext.MasterArbitration.prototype.hasElectionId = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gnmi_ext.Uint128.prototype.toObject = function(opt_includeInstance) {
  return proto.gnmi_ext.Uint128.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gnmi_ext.Uint128} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gnmi_ext.Uint128.toObject = function(includeInstance, msg) {
  var f, obj = {
    high: jspb.Message.getFieldWithDefault(msg, 1, 0),
    low: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gnmi_ext.Uint128}
 */
proto.gnmi_ext.Uint128.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gnmi_ext.Uint128;
  return proto.gnmi_ext.Uint128.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gnmi_ext.Uint128} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gnmi_ext.Uint128}
 */
proto.gnmi_ext.Uint128.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setHigh(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLow(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gnmi_ext.Uint128.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gnmi_ext.Uint128.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gnmi_ext.Uint128} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gnmi_ext.Uint128.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHigh();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getLow();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 high = 1;
 * @return {number}
 */
proto.gnmi_ext.Uint128.prototype.getHigh = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.gnmi_ext.Uint128} returns this
 */
proto.gnmi_ext.Uint128.prototype.setHigh = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 low = 2;
 * @return {number}
 */
proto.gnmi_ext.Uint128.prototype.getLow = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.gnmi_ext.Uint128} returns this
 */
proto.gnmi_ext.Uint128.prototype.setLow = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gnmi_ext.Role.prototype.toObject = function(opt_includeInstance) {
  return proto.gnmi_ext.Role.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gnmi_ext.Role} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gnmi_ext.Role.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gnmi_ext.Role}
 */
proto.gnmi_ext.Role.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gnmi_ext.Role;
  return proto.gnmi_ext.Role.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gnmi_ext.Role} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gnmi_ext.Role}
 */
proto.gnmi_ext.Role.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gnmi_ext.Role.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gnmi_ext.Role.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gnmi_ext.Role} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gnmi_ext.Role.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.gnmi_ext.Role.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gnmi_ext.Role} returns this
 */
proto.gnmi_ext.Role.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * @enum {number}
 */
proto.gnmi_ext.ExtensionID = {
  EID_UNSET: 0,
  EID_EXPERIMENTAL: 999
};

goog.object.extend(exports, proto.gnmi_ext);
