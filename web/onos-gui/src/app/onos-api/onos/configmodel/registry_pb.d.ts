// Code generated by GENERATOR. DO NOT EDIT.

import * as jspb from "google-protobuf"

export class ConfigModel extends jspb.Message {
  getName(): string;
  setName(value: string): void;

  getVersion(): string;
  setVersion(value: string): void;

  getModulesList(): Array<ConfigModule>;
  setModulesList(value: Array<ConfigModule>): void;
  clearModulesList(): void;
  addModules(value?: ConfigModule, index?: number): ConfigModule;

  getFilesMap(): jspb.Map<string, string>;
  clearFilesMap(): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ConfigModel.AsObject;
  static toObject(includeInstance: boolean, msg: ConfigModel): ConfigModel.AsObject;
  static serializeBinaryToWriter(message: ConfigModel, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ConfigModel;
  static deserializeBinaryFromReader(message: ConfigModel, reader: jspb.BinaryReader): ConfigModel;
}

export namespace ConfigModel {
  export type AsObject = {
    name: string,
    version: string,
    modulesList: Array<ConfigModule.AsObject>,
    filesMap: Array<[string, string]>,
  }
}

export class ConfigModule extends jspb.Message {
  getName(): string;
  setName(value: string): void;

  getFile(): string;
  setFile(value: string): void;

  getRevision(): string;
  setRevision(value: string): void;

  getOrganization(): string;
  setOrganization(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ConfigModule.AsObject;
  static toObject(includeInstance: boolean, msg: ConfigModule): ConfigModule.AsObject;
  static serializeBinaryToWriter(message: ConfigModule, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ConfigModule;
  static deserializeBinaryFromReader(message: ConfigModule, reader: jspb.BinaryReader): ConfigModule;
}

export namespace ConfigModule {
  export type AsObject = {
    name: string,
    file: string,
    revision: string,
    organization: string,
  }
}

export class GetModelRequest extends jspb.Message {
  getName(): string;
  setName(value: string): void;

  getVersion(): string;
  setVersion(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): GetModelRequest.AsObject;
  static toObject(includeInstance: boolean, msg: GetModelRequest): GetModelRequest.AsObject;
  static serializeBinaryToWriter(message: GetModelRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): GetModelRequest;
  static deserializeBinaryFromReader(message: GetModelRequest, reader: jspb.BinaryReader): GetModelRequest;
}

export namespace GetModelRequest {
  export type AsObject = {
    name: string,
    version: string,
  }
}

export class GetModelResponse extends jspb.Message {
  getModel(): ConfigModel | undefined;
  setModel(value?: ConfigModel): void;
  hasModel(): boolean;
  clearModel(): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): GetModelResponse.AsObject;
  static toObject(includeInstance: boolean, msg: GetModelResponse): GetModelResponse.AsObject;
  static serializeBinaryToWriter(message: GetModelResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): GetModelResponse;
  static deserializeBinaryFromReader(message: GetModelResponse, reader: jspb.BinaryReader): GetModelResponse;
}

export namespace GetModelResponse {
  export type AsObject = {
    model?: ConfigModel.AsObject,
  }
}

export class ListModelsRequest extends jspb.Message {
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ListModelsRequest.AsObject;
  static toObject(includeInstance: boolean, msg: ListModelsRequest): ListModelsRequest.AsObject;
  static serializeBinaryToWriter(message: ListModelsRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ListModelsRequest;
  static deserializeBinaryFromReader(message: ListModelsRequest, reader: jspb.BinaryReader): ListModelsRequest;
}

export namespace ListModelsRequest {
  export type AsObject = {
  }
}

export class ListModelsResponse extends jspb.Message {
  getModelsList(): Array<ConfigModel>;
  setModelsList(value: Array<ConfigModel>): void;
  clearModelsList(): void;
  addModels(value?: ConfigModel, index?: number): ConfigModel;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ListModelsResponse.AsObject;
  static toObject(includeInstance: boolean, msg: ListModelsResponse): ListModelsResponse.AsObject;
  static serializeBinaryToWriter(message: ListModelsResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ListModelsResponse;
  static deserializeBinaryFromReader(message: ListModelsResponse, reader: jspb.BinaryReader): ListModelsResponse;
}

export namespace ListModelsResponse {
  export type AsObject = {
    modelsList: Array<ConfigModel.AsObject>,
  }
}

export class PushModelRequest extends jspb.Message {
  getModel(): ConfigModel | undefined;
  setModel(value?: ConfigModel): void;
  hasModel(): boolean;
  clearModel(): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): PushModelRequest.AsObject;
  static toObject(includeInstance: boolean, msg: PushModelRequest): PushModelRequest.AsObject;
  static serializeBinaryToWriter(message: PushModelRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): PushModelRequest;
  static deserializeBinaryFromReader(message: PushModelRequest, reader: jspb.BinaryReader): PushModelRequest;
}

export namespace PushModelRequest {
  export type AsObject = {
    model?: ConfigModel.AsObject,
  }
}

export class PushModelResponse extends jspb.Message {
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): PushModelResponse.AsObject;
  static toObject(includeInstance: boolean, msg: PushModelResponse): PushModelResponse.AsObject;
  static serializeBinaryToWriter(message: PushModelResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): PushModelResponse;
  static deserializeBinaryFromReader(message: PushModelResponse, reader: jspb.BinaryReader): PushModelResponse;
}

export namespace PushModelResponse {
  export type AsObject = {
  }
}

export class DeleteModelRequest extends jspb.Message {
  getName(): string;
  setName(value: string): void;

  getVersion(): string;
  setVersion(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): DeleteModelRequest.AsObject;
  static toObject(includeInstance: boolean, msg: DeleteModelRequest): DeleteModelRequest.AsObject;
  static serializeBinaryToWriter(message: DeleteModelRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): DeleteModelRequest;
  static deserializeBinaryFromReader(message: DeleteModelRequest, reader: jspb.BinaryReader): DeleteModelRequest;
}

export namespace DeleteModelRequest {
  export type AsObject = {
    name: string,
    version: string,
  }
}

export class DeleteModelResponse extends jspb.Message {
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): DeleteModelResponse.AsObject;
  static toObject(includeInstance: boolean, msg: DeleteModelResponse): DeleteModelResponse.AsObject;
  static serializeBinaryToWriter(message: DeleteModelResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): DeleteModelResponse;
  static deserializeBinaryFromReader(message: DeleteModelResponse, reader: jspb.BinaryReader): DeleteModelResponse;
}

export namespace DeleteModelResponse {
  export type AsObject = {
  }
}

